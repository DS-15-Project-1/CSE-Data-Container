from setuptools import setup, Extension
import subprocess
import os

# Function to compile Zig code
def compile_zig():
    zig_command = [
        "zig",
        "build-lib",
        "-dynamic",
        "-fPIC",
        "-O",
        "ReleaseSafe",
        "seismic_processing.zig"
    ]
    
    try:
        subprocess.run(zig_command, check=True)
        print("Zig compilation successful")
    except subprocess.CalledProcessError as e:
        raise RuntimeError(f"Failed to compile Zig code: {e}")

# Compile Zig code before setting up the package
compile_zig()

# Define the extension
ext_modules = [
    Extension(
        "seismic_processing",
        sources=["seismic_processing_wrapper.cpp"],
        libraries=["seismic_processing"],
        extra_link_args=["-fuse-ld=lld"],
    )
]

setup(
    name="seismic-data-converter",
    version="0.1",
    packages=["seismic_converter"],
    ext_modules=ext_modules,
    install_requires=[
        "paramiko",
        "obspy",
        "pandas",
        "pyarrow",
        "tqdm",
    ],
    entry_points={
        "console_scripts": [
            "convert_seismic=mseed_parquet:main",
        ],
    },
)